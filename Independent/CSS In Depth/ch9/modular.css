/* normalize.css (https://necolas.github.io/normalize.css/ or npm install normalize.css) 
    a useful Browser normalizing CSS file. Imported at the 
    top so we can easily override where needed*/
@import url(normalize.css);

/*Base Styles*/
/* They don't necessarily have anything to do with a *specific*
website, or its modules, but set a foundation/base to build on.
*/
:root {
    box-sizing: border-box;
}

*,
::before,
::after {
    box-sizing: inherit;
}

body {
    font-family: Arial, Helvetica, sans-serif;
    /* Set up default color palette if it's not black on white, etc...
        Especially setting up variables*/
    --bg-color: rgba(80, 80, 80, .07);
    --font-color: rgba(250, 250, 250, 1);

}

/*
  Common base style when navs use anchor tags
   If you want a more traditional anchor you can style it
   at that specific point.
  Rule of thumb: base styles target basic tags. If you're using 
   IDs or classes, you're probably not setting a generic base style.
*/
a {
    text-decoration: none;
}

/* A simple module: the message module */
/* It doesn't matter what the tag is, the class is the important bit.
   I could theoretically use this in other places, on other tags,
   because it's a fairly generic 'module' definition.
   Use of class instead of id to avoid issues with specificity and 
   over-needing !important.*/
.message {
    padding: 0.8em 1.2em;
    border-radius: 0.2em;
    border: 1px solid #265559;
    color: #265559;
    background-color: #e0f0f2;
}

/* Module modifiers:
    slight modifications of a module to tweak it for more specific uses
    A convention: .module--modifier, e.g. .message--success
    The --modifier guarantees no conflict with parent module or
    any other module. Also guarantees that it won't conflict with any other
    modules that might share other attributes since CSS tends to hyphenate
    words in identifier names. Possibly might be avoidable with careful naming
    but in large projects...
    */
.message--success {
    color: #2f5926;
    border-color: #2f5926;
    background-color: #cfe8c9;
}

.message--warning {
    color: #594826;
    border-color: #594826;
    background-color: #e8dec9;
}

.message--error {
    color: #59262f;
    border-color: #59262f;
    background-color: #e8c9cf;
}

.button {
    padding: .5em .8em;
    border: 1px solid #265559;
    border-radius: .2em;
    background-color: transparent;
    font-size: 1rem;
}

.button--success {
    border-color: #cfe8c9;
    color: #fff;
    background-color: #2f5926;
}

.button--danger {
    border-color: #e8c9c9;
    color: #fff;
    background-color: #a92323;
}

.button--small {
    font-size: .8rem;
}

.button--large {
    font-size: 1.2rem;
}

.media {
    padding: 1.5em;
    background-color: #eee;
    border-radius: .5em;
}

.media::after {
    content: "";
    display: block;
    clear: both;
}

.media__image {
    float: left;
    margin-right: 1.5em;
}

.media__body {
    overflow: auto;
    margin-top: 0;
}

.media__body>h4 {
    margin-top: 0;
}

.media--right>.media__image {
    float: right;
}

.dropdown {
    display: inline-block;
    position: relative;
}

/* Big benefit of modular css is they can really easily cascade, as below.*/
.dropdown__toggle {
    padding: .5em 2em .5em 1.5em;
    border: 1px solid #ccc;
    font-size: 1rem;
    background-color: #eee;
}

.dropdown__toggle::after {
    content: "";
    position: absolute;
    right: 1em;
    top: 1em;
    border: .3em solid;
    border-color: black transparent transparent;
}

.dropdown.is-open .dropdown__toggle::after {
    top: .7em;
    border-color: transparent transparent black;
}

.dropdown__toggle:hover {
    background-color: #fff;
}

.dropdown__drawer {
    display: none;
    position: absolute;
    left: 0;
    top: 2.1em;
    min-width: 100%;
    background-color: #eee;
}

.dropdown.is-open .dropdown__drawer {
    display: block;
}

.menu {
    margin: 0;
    padding-left: 0;
    list-style-type: none;
    border: 1px solid #999;
}

.menu>li+li {
    border-top: 1px solid #999;
}

.menu>li>a {
    display: block;
    padding: .5em 1.5em;
    background-color: #eee;
    color: #369;
    text-decoration: none;
}

.menu>li>a:hover {
    background-color: #fff;
}